{"version":3,"sources":["components/NavIcon.js","components/NavBar.js","context/DataContext.js","components/RessourceType.js","components/ProgressBar.js","components/Ressources.js","components/TradeButtons.js","components/EosLoader.js","routes/Wallet.js","routes/Settings.js","routes/Explorer.js","routes/Home.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["NavIcon","props","className","alt","src","iconurl","routename","NavBar","buttonImgUrls","to","activeClassName","DataContext","createContext","DataContextProvider","useEffect","fetch","method","then","response","json","res","console","log","setExchangeValue","price","catch","error","myHeaders","Headers","append","requestOptions2","headers","accountName","result","core_liquid_balance","setBallance","replace","setNet_max","round2","net_limit","max","setNet_use","used","setCpu_max","cpu_limit","setCpu_use","setRam_max","ram_quota","setRam_use","ram_usage","setNetWeight","stakedFormat","net_weight","setCpuWeight","cpu_weight","setStaked","setIsLoading","getAccount","useState","setAccountName","ballance","net_max","net_use","cpu_max","cpu_use","ram_max","ram_use","netWeight","cpuWeight","staked","exchangeValue","isLoading","number","Math","round","number1","number2","toFixed","Provider","value","changeAccountName","name","children","RessourceType","id","type","consumption","withIcon","ProgressBar","dataCon","useContext","elem","document","getElementById","slug","percent","i","width","setInterval","clearInterval","style","move","backgroundColor","borderColor","borderWidth","height","borderStyle","Ressources","calcPercent","marginBottom","TradeButtons","EosLoader","Wallet","eosIcon","isNaN","Settings","Explorer","Home","Header","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87b98cae.chunk.js","sourcesContent":["import React from 'react'\n\nconst NavIcon = (props) => {\n    return (\n        <div className=\"navicon\">\n            <img alt=\"NavButton\" src={props.iconurl} />\n            <p>{props.routename}</p>\n        </div>\n    )\n}\n\nexport default NavIcon;\n","import React from \"react\";\nimport NavIcon from \"./NavIcon\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const buttonImgUrls = [\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581240405/wombat/gear_fnbjbo.png\",\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581240405/wombat/wallet_qg6uwn.png\",\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581240455/wombat/home_shuqs8.png\",\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581240405/wombat/compass_wzpihn.png\"\n  ];\n\n  return (\n    <div className=\"navbar\">\n      <NavLink to=\"/settings\" activeClassName=\"activeRoute\">\n        <NavIcon iconurl={buttonImgUrls[0]} routename={\"Settings\"} />\n      </NavLink>\n      <NavLink to=\"/wallet\" activeClassName=\"activeRoute\">\n        <NavIcon iconurl={buttonImgUrls[1]} routename={\"Wallet\"} />\n      </NavLink>\n      <NavLink to=\"/home\" activeClassName=\"activeRoute\">\n        <NavIcon iconurl={buttonImgUrls[2]} routename={\"Home\"} />\n      </NavLink>\n      <NavLink to=\"/explorer\" activeClassName=\"activeRoute\">\n        <NavIcon iconurl={buttonImgUrls[3]} routename={\"Explorer\"} />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const DataContext = createContext();\n\nconst DataContextProvider = props => {\n  useEffect(() => {\n    getExchangeValue();\n    getAccount();\n  }, []);\n\n  const [accountName, setAccountName] = useState(\"genialwombat\");\n  const [ballance, setBallance] = useState(\"0.0000\");\n  const [net_max, setNet_max] = useState(0);\n  const [net_use, setNet_use] = useState(0);\n  const [cpu_max, setCpu_max] = useState(0);\n  const [cpu_use, setCpu_use] = useState(0);\n  const [ram_max, setRam_max] = useState(0);\n  const [ram_use, setRam_use] = useState(0);\n  const [netWeight, setNetWeight] = useState(0.0);\n  const [cpuWeight, setCpuWeight] = useState(0.0);\n  const [staked, setStaked] = useState(0.0);\n  const [exchangeValue, setExchangeValue] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\nconst sourceLink =\"http://localhost:3000\"\n\n  function getExchangeValue() {\n\n    var requestOptions = {\n      method: \"GET\",\n     \n    };\n\n    fetch(\n      \"https://api.nomics.com/v1/currencies/ticker?key=7c8016160f57bb4a5ab8707a73810e33&ids=EOS\",\n      requestOptions\n    )\n      .then(response => response.json())\n      .then(res => {console.log(res); setExchangeValue(res[0].price)})\n      \n      .catch(error => console.log(\"error\", error));\n  }\n\n  function changeAccountName(name) {\n    setAccountName(name);\n  }\n\n  function getAccount() {\n    // Request Header for direct API\n\n/*       var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"text/plain\");\n\n    var raw = `{\"account_name\":\"${accountName}\"}`;\n\n     var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };   */\n   \n    var myHeaders = new Headers();\n    myHeaders.append('Access-Control-Allow-Origin', sourceLink);\n    var requestOptions2 = {\n      method: \"GET\",\n      headers: myHeaders\n    };\n\n    \n   // https://api.eosdetroit.io:443/v1/chain/get_account direct API\n\n    fetch(`https://eos-station.herokuapp.com/api/fetch/${accountName}`, requestOptions2)\n      .then(response => response.json())\n      .then(result => {\n       console.log(result)\n        if(result){\n        \n\n        result.core_liquid_balance &&\n          setBallance(result.core_liquid_balance.replace(\" EOS\", \"\"));\n        setNet_max(round2(result.net_limit.max / 1000));\n        setNet_use(round2(result.net_limit.used / 1000));\n        setCpu_max(round2(result.cpu_limit.max / 1000));\n        setCpu_use(round2(result.cpu_limit.used / 1000));\n        setRam_max(round2(result.ram_quota / 1000));\n        setRam_use(round2(result.ram_usage / 1000));\n        setNetWeight(stakedFormat(result.net_weight, 0));\n        setCpuWeight(stakedFormat(result.cpu_weight, 0));\n        setStaked(stakedFormat(result.net_weight, result.cpu_weight));\n        setIsLoading(false);}\n        else{console.log(\"Fetch did not work\")}\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  function round2(number) {\n    number = Math.round(number * 100) / 100;\n    return number;\n  }\n\n  function stakedFormat(number1, number2) {\n    return ((number1 + number2) / 10000).toFixed(4);\n  }\n\n  return (\n    <DataContext.Provider\n      value={{\n        ballance: ballance,\n        staked: staked,\n        accountName: accountName,\n        net_max: net_max,\n        net_use: net_use,\n        cpu_max: cpu_max,\n        cpu_use: cpu_use,\n        ram_max: ram_max,\n        ram_use: ram_use,\n        net_weight: netWeight,\n        cpu_weight: cpuWeight,\n        exchangeValue: exchangeValue,\n        isLoading: isLoading,\n        changeAccountName: changeAccountName\n      }}\n    >\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataContextProvider;\n","import React from 'react'\n\nconst RessourceType = (props) => {\n    const eosIcon=\"https://res.cloudinary.com/munnotubbel/image/upload/v1581182752/wombat/5a52232c2f93c7a8d5137fdd_izhtxc.png\"\n    return (\n        <div className=\"ressource_type\">\n            <div id=\"type\">{props.type}</div>\n            <div id=\"consumption\">{props.consumption}</div>\n          \n            <div className=\"stakedinfo\"><p>{props.staked}</p>{props.withIcon===true ?<img className=\"coinIcon\" alt=\"EOS-ICON\" src={eosIcon}/>:null}</div>\n        </div>\n    )\n}\n\nexport default RessourceType;\n","import React,{useEffect, useContext} from \"react\";\nimport { DataContext } from \"../context/DataContext\";\n\nconst ProgressBar = props => {\n   const dataCon = useContext(DataContext);\n   useEffect(() => {\n    move()\n  }, [dataCon.isLoading===true]);\n\n\n   var i = 0;\n   function move() {\n    var elem = document.getElementById(props.slug);\n     if (props.percent>0){\n     if (i == 0) {\n       i = 1;\n       var elem = document.getElementById(props.slug);\n       var width = 0;\n       var id = setInterval(frame, 20);\n       function frame() {\n         if (width >= props.percent) {\n           clearInterval(id);\n           i = 0;\n         } else {\n           width++;\n           elem.style.width = width + \"%\";\n         }\n       }\n     }}\n     else{elem.style.width = props.percent+\"%\"}\n   }\n\n\n  return (\n    <div className=\"progressbar\">\n      <div className=\"percent\">\n        <div>{props.percent} %</div>\n      </div>\n      <div className=\"barOuter\">\n        <div id={props.slug} \n          style={{\n            width:\"0%\",\n            backgroundColor: \"white\",\n            borderColor: \"black\",\n            borderWidth: \"2px\",\n            height: \"16px\",\n            borderStyle: \"solid\"\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useContext } from \"react\";\nimport RessourceType from \"./RessourceType\";\nimport ProgressBar from \"./ProgressBar\";\nimport { DataContext } from \"../context/DataContext\";\n\nconst Ressources = () => {\n  const dataCon = useContext(DataContext);\n\n  function calcPercent(number1, number2) {\n    const percent = Math.round((number1 / number2) * 100);\n\n    if (percent >= 100) {\n      return 100;\n    } else if (percent >= 0) {\n      return percent;\n    } else {\n      return 0;\n    }\n  }\n\n  return (\n    <div className=\"ressources\">\n      <div>\n        <RessourceType\n          type={\"Net\"}\n          consumption={`${dataCon.net_use}kb / ${dataCon.net_max}kb`}\n          staked={dataCon.net_weight}\n          withIcon={true}\n        />\n        <ProgressBar percent={calcPercent(dataCon.net_use, dataCon.net_max)} slug={\"netBar\"}/>\n      </div>\n\n      <div>\n        <RessourceType\n          type={\"Cpu\"}\n          consumption={`${dataCon.cpu_use}kb / ${dataCon.cpu_max}kb`}\n          staked={dataCon.cpu_weight}\n          withIcon={true}\n        />\n        <ProgressBar percent={calcPercent(dataCon.cpu_use, dataCon.cpu_max)} slug={\"cpuBar\"}/>\n      </div>\n\n      <div style={{ marginBottom: \"60px\" }}>\n        <RessourceType\n          type={\"Ram\"}\n          consumption={`${dataCon.ram_use}kb / ${dataCon.ram_max}kb`}\n          staked={\"\"}\n        />\n        <ProgressBar percent={calcPercent(dataCon.ram_use, dataCon.ram_max)} slug={\"ramBar\"}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Ressources;\n","import React from 'react'\n\nconst TradeButtons = () => {\n    return (\n        <div className=\"tradebuttons\">\n            <div><button className=\"tradebutton\" >buy</button></div>\n            <div><button className=\"tradebutton\" >send</button></div>\n            <div><button className=\"tradebutton\" >sell</button></div>\n        </div>\n    )\n}\n\nexport default TradeButtons;\n","import React from 'react'\n\nconst EosLoader = () => {\n    const eosIcon =\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581182752/wombat/5a52232c2f93c7a8d5137fdd_izhtxc.png\";\n    return (\n        <img className=\"pulse\" src={eosIcon} />\n    )\n}\n\nexport default EosLoader;\n","import React, { useContext } from \"react\";\nimport Ressources from \"../components/Ressources\";\nimport { DataContext } from \"../context/DataContext\";\nimport TradeButtons from \"../components/TradeButtons\";\nimport EosLoader from \"../components/EosLoader\"\nconst Wallet = () => {\n  const eosIcon =\n    \"https://res.cloudinary.com/munnotubbel/image/upload/v1581182752/wombat/5a52232c2f93c7a8d5137fdd_izhtxc.png\";\n\n  const dataCon = useContext(DataContext);\n  const exchangeValue = dataCon.ballance * dataCon.exchangeValue;\n  return (\n    <div className=\"wallet\">\n      {dataCon.isLoading === true ? (\n        <div className=\"ammount\">\n          <EosLoader/>\n       \n        \n        </div>\n      ) : (\n        <div className=\"ammount\">\n          <div id=\"eos\">\n            <h1>{dataCon.ballance}</h1>\n            <img alt=\"EOS-ICON\" src={eosIcon} />\n          </div>\n          <div id=\"dollar\">\n            <h2>{`= ${\n              isNaN(exchangeValue) ? \"-\" : exchangeValue.toFixed(2)\n            }$`}</h2>\n          </div>\n        </div>\n      )}\n\n      <TradeButtons />\n      <div className=\"resourceinfo\">\n        <div id=\"ressources_title\">\n          <h4>Ressources</h4>\n\n          <div>\n            <h5>Staked</h5>\n            <div className=\"stakedinfo\">\n              <p>{dataCon.staked}</p>\n              <img className=\"coinIcon\" alt=\"EOS-ICON\" src={eosIcon} />\n            </div>\n          </div>\n        </div>\n        <Ressources />\n      </div>\n    </div>\n  );\n};\n\nexport default Wallet;\n","import React from 'react'\n\nconst Settings = () => {\n    return (\n        <div className=\"tobeadded\">\n            <h1>Settings</h1>\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from 'react'\n\nconst Explorer = () => {\n    return (\n        <div className=\"tobeadded\">  \n            <h1>Explorer</h1>\n        </div>\n    )\n}\n\nexport default Explorer;\n","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div className=\"tobeadded\">\n            <h1>Home</h1>\n        </div>\n    )\n}\n\nexport default Home;\n","import React,{useContext} from 'react'\nimport { DataContext } from \"../context/DataContext\";\nconst Header = () => {\n    \n    \n    const dataCon = useContext(DataContext);\n    console.log(dataCon)\n    return (\n        <div className=\"headtitle\">  \n                {dataCon.isLoading===true ? <h1>loading</h1>:\n             <h1>{dataCon.accountName!==null ? dataCon.accountName : \"nobody\" }</h1>}\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./css/App.css\";\n\nimport NavBar from \"./components/NavBar\";\nimport DataContextProvider from \"./context/DataContext\";\nimport Wallet from \"./routes/Wallet\";\nimport Settings from \"./routes/Settings\";\nimport Explorer from \"./routes/Explorer\";\nimport Home from \"./routes/Home\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <Router>\n      <DataContextProvider>\n        <div className=\"outerContainer\">\n          <div className=\"header\">\n            <Header />\n          </div>\n\n          <div className=\"info\">\n            <Switch>\n              <Route path=\"/settings\">\n                <Settings />\n              </Route>\n              <Route path=\"/home\">\n                <Home />\n              </Route>\n              <Route path=\"/explorer\">\n                <Explorer />\n              </Route>\n              <Route exact path=\"/wallet\">\n                <Wallet />\n              </Route>\n            </Switch>\n          </div>\n\n          <div className=\"footer\">\n            <NavBar />\n          </div>\n        </div>\n      </DataContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}